{{- range $index, $ing := .Values.ingresses }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-%s-ingress" $.Release.Name $ing.name }}
  namespace: {{ $ing.namespace | default $.Release.Namespace }}
  labels:
    app: {{ printf "%s-%s" $.Release.Name $ing.name }}
  annotations:
    {{- if $ing.annotations }}
    {{- toYaml $ing.annotations | nindent 4 }}
    {{- end }}

    # Conditionally add cert-manager.io/cluster-issuer:
    {{- if and $ing.tls.enabled (or (eq $.Values.deploymentType "test") (eq $.Values.deploymentType "prod")) }}
    cert-manager.io/cluster-issuer: "{{ if eq $.Values.deploymentType "test" }}{{ $.Values.certManager.issuers.staging }}{{ else }}{{ $.Values.certManager.issuers.production }}{{ end }}"
    {{- end }}

spec:
  {{- if $ing.className }}
  ingressClassName: {{ $ing.className }}
  {{- end }}

  rules:
    - host: {{ $ing.host }}
      http:
        paths:
          - path: {{ $ing.path }}
            pathType: {{ $ing.pathType }}
            backend:
              service:
                name: {{ $.Release.Name }}{{ $ing.serviceNameEnding }}
                port:
                  number: {{ $ing.servicePort }}

  {{- if $ing.tls.enabled }}
  tls:
    - hosts:
        - {{ $ing.host }}
      # If dev, use the dev secret we created from local files
      # If test or prod, Cert Manager will (re)create the secret automatically
      # but we need to provide the name of the secret to use.
      secretName: "{{ if eq $.Values.deploymentType "dev" -}}{{ $ing.tls.dev.secretName }}{{ else if $ing.tls.existingSecretName -}}{{ $ing.tls.existingSecretName }}{{ else -}}{{ printf "%s-%s-tls" $.Release.Name $ing.name }}{{ end }}"
  {{- end }}
{{- end }}
